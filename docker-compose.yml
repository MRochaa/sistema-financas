version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: family-expenses-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: family_expenses
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: family-expenses-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/family_expenses?schema=public
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
      NODE_ENV: production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma generate &&
        npm run db:seed &&
        npm start
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: family-expenses-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:3001/api

volumes:
  postgres_data: