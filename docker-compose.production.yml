version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: financas-lar-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-financas_lar}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-financas_lar}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - financas-network
    security_opt:
      - no-new-privileges:true

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: financas-lar-app
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-financas_lar}?schema=public
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3001
      NODE_ENV: production
      FRONTEND_URL: ${FRONTEND_URL}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
    ports:
      - "${APP_PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - app_logs:/app/logs
    networks:
      - financas-network
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: financas-lar-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - app_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - financas-network
    security_opt:
      - no-new-privileges:true

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  financas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16