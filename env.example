# ============================================
# CONFIGURAÇÕES DO BANCO DE DADOS
# ============================================

# Para usar banco externo (recomendado para produção)
# Exemplo do Coolify:
DATABASE_URL=postgresql://financas_user:financas_senha_123@q8oo8gc4c8c4c0ccs4g800ws:5432/financas_lar_db?schema=public

# Para usar banco local (descomente o profile local-db no docker-compose)
POSTGRES_DB=financas_lar_db
POSTGRES_USER=financas_user
POSTGRES_PASSWORD=financas_senha_123
POSTGRES_PORT=5432

# ============================================
# CONFIGURAÇÕES DA APLICAÇÃO
# ============================================

# Ambiente
NODE_ENV=production

# Portas
APP_PORT=80

# URLs
# Exemplo do Coolify:
FRONTEND_URL=https://es4ckok8g0k0sgo0w0o044kk.82.25.65.212.sslip.io
VITE_API_URL=/api

# ============================================
# CONFIGURAÇÕES DE SEGURANÇA
# ============================================

# JWT
# Exemplo do Coolify (NÃO use esta chave em produção - gere uma nova):
JWT_SECRET=d6f48b92f22731e48f7edde5e0fe5127f55dc08c3c12de0d0b74511ab28bee8c
JWT_EXPIRES_IN=7d

# Bcrypt
BCRYPT_ROUNDS=12

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ============================================
# CONFIGURAÇÕES DO NGINX (se usando nginx separado)
# ============================================

NGINX_PORT=80
NGINX_SSL_PORT=443

# ============================================
# CONFIGURAÇÕES ESPECÍFICAS DO COOLIFY
# ============================================

# Variáveis adicionais do Coolify (opcional)
BACKEND_PORT=3001
FINANCAS_POSTGRES_DB=financas_lar_db
FINANCAS_POSTGRES_PASSWORD=financas_senha_123
FINANCAS_POSTGRES_USER=financas_user

# ============================================
# INSTRUÇÕES DE USO
# ============================================

# 1. Copie este arquivo para .env
# 2. Ajuste as variáveis conforme seu ambiente
# 3. Para Coolify, use as variáveis fornecidas pelo painel
# 4. Para desenvolvimento local, use docker-compose --profile local-db up
# 5. Para produção, use docker-compose up
