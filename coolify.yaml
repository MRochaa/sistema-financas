# Configuração para Coolify
services:
  app:
    image: node:20-alpine
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://${FINANCAS_POSTGRES_USER}:${FINANCAS_POSTGRES_PASSWORD}@postgres:5432/${FINANCAS_POSTGRES_DB}?schema=public
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - FINANCAS_POSTGRES_DB=${FINANCAS_POSTGRES_DB}
      - FINANCAS_POSTGRES_USER=${FINANCAS_POSTGRES_USER}
      - FINANCAS_POSTGRES_PASSWORD=${FINANCAS_POSTGRES_PASSWORD}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      start_period: 180s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${FINANCAS_POSTGRES_DB}
      - POSTGRES_USER=${FINANCAS_POSTGRES_USER}
      - POSTGRES_PASSWORD=${FINANCAS_POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${FINANCAS_POSTGRES_USER} -d ${FINANCAS_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: