version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: financas-sistema
    environment:
      # Database
      DATABASE_URL: postgresql://financas_user:sua_senha_super_segura_aqui@postgres:5432/financas_lar?schema=public
      POSTGRES_USER: financas_user
      POSTGRES_PASSWORD: sua_senha_super_segura_aqui
      POSTGRES_DB: financas_lar
      
      # JWT & Security
      JWT_SECRET: sua_chave_jwt_super_segura_de_pelo_menos_32_caracteres
      JWT_EXPIRES_IN: 7d
      BCRYPT_ROUNDS: 12
      
      # Application
      NODE_ENV: production
      PORT: 3001
      FRONTEND_URL: https://esgcwcsso0go4ck4ogs8ko8o.82.25.65.212.sslip.io
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: financas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: financas_lar
      POSTGRES_USER: financas_user
      POSTGRES_PASSWORD: sua_senha_super_segura_aqui
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U financas_user -d financas_lar"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - coolify

volumes:
  postgres_data:
    driver: local

networks:
  coolify:
    external: true