version: '3.8'

services:
  # Banco de dados PostgreSQL com nomes únicos
  financas-postgres:
    image: postgres:15-alpine
    container_name: financas-lar-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${FINANCAS_POSTGRES_DB:-financas_lar_db}
      POSTGRES_USER: ${FINANCAS_POSTGRES_USER:-financas_user}
      POSTGRES_PASSWORD: ${FINANCAS_POSTGRES_PASSWORD:-financas_senha_123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - financas_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Porta diferente para evitar conflitos
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${FINANCAS_POSTGRES_USER:-financas_user} -d ${FINANCAS_POSTGRES_DB:-financas_lar_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - coolify

  # Aplicação completa
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: financas-lar-app
    environment:
      # Database com novos nomes
      DATABASE_URL: postgresql://${FINANCAS_POSTGRES_USER:-financas_user}:${FINANCAS_POSTGRES_PASSWORD:-financas_senha_123}@financas-postgres:5432/${FINANCAS_POSTGRES_DB:-financas_lar_db}?schema=public
      POSTGRES_USER: ${FINANCAS_POSTGRES_USER:-financas_user}
      POSTGRES_PASSWORD: ${FINANCAS_POSTGRES_PASSWORD:-financas_senha_123}
      POSTGRES_DB: ${FINANCAS_POSTGRES_DB:-financas_lar_db}
      POSTGRES_HOST: financas-postgres
      POSTGRES_PORT: 5432
      
      # JWT & Security
      JWT_SECRET: ${JWT_SECRET:-sua_chave_jwt_super_segura_de_pelo_menos_32_caracteres}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      
      # Application
      NODE_ENV: production
      PORT: 3000
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
    ports:
      - "3000:3000"
    depends_on:
      financas-postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - coolify
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      start_period: 180s
      retries: 3

volumes:
  financas_postgres_data:
    driver: local

networks:
  coolify:
    external: true